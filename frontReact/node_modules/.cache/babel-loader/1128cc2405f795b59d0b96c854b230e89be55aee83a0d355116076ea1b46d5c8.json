{"ast":null,"code":"var _jsxFileName = \"/home/axm/asa/js/gestionProd/reactphp/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { TextField, Button, Dialog, DialogContent, Typography } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport Alert from '@mui/material/Alert';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { response } from 'express';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _c2 = App(_c = () => {\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"GESTION PRODUITS\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n});\n{/*const App = () => {\n const [products, setProducts] = useState([]);\n const [produitInfo, setProduitInfo] = useState({\n \tnumProduit: '',\n \tdesign: '',\n \tprix: '',\n \tquantite: ''\n })\n const [addMod, setAddMod] = useState(false);\n const [showAlert, setShowAlert] = useState(false);\n const [confirmDel, setConfirmDel] = useState(false);\n const [idDel, setIdDel] = useState('')\n const [editMod, setEditMod] = useState(false);\n const [searchText, setSearchText] = useState('');\n const [idMod, setIdMod] = useState('')\n const [selectedProduct, setSelectedProduct] = useState(null);\n const [filteredData, setFilteredData] = useState('');\n const [produitEditedInfo, setProduitEditedInfo] = useState({\n \tnumProduit: '',\n \tdesign: '',\n \tprix: '',\n \tquantite: ''\n });\n \tconst handleChange = (event) => {\n \tconst { name, value } = event.target;\n \tsetProduitInfo((prevProducts) => ({\n \t\t...prevProducts,\n \t\t[name]: value,\n \t}));\n };\n \tconst handleEditChange = (event) => {\n \tconst { name, value } = event.target;\n \tsetProduitEditedInfo((prevProduct) => ({\n \t\t...prevProduct,\n \t\t[name]: value,\n \t}));\n \tconsole.log(produitEditedInfo);\n }\n \tconst fetchProducts = async () => {\n \ttry {\n \t\tconst response = await axios.get('http://localhost:3000/produits/');\n \t\tsetProducts(response.data);\n \t} catch (error) {\n \t\tconsole.error('Error fetching products:', error);\n \t}\n };\n \tuseEffect(() => {\n \tfetchProducts();\n }, []);\n \tconst insertProducts = async () => {\n \tconst response = await axios.post(\"http://localhost:3000/produits\", produitInfo);\n \tconsole.log(produitInfo);\n \tfetchProducts()\n \tsetAddMod(false)\n \tsetShowAlert(true)\n \tsetProduitInfo('')\n \tsetTimeout(() => {\n \t\tsetShowAlert(false);\n \t}, 3000);\n }\n \tconst deleteProducts = async (numProduit) => {\n \tconst response = await axios.delete(`http://localhost:3000/produits/${numProduit}`);\n \tfetchProducts()\n \tsetShowAlert(true)\n \tsetTimeout(() => {\n \t\tsetShowAlert(false);\n \t}, 3000);\n }\n \tconst handleSelectProduct = (product) => {\n \tsetSelectedProduct(product);\n };\n \tconst editProducts = async () => {\n \ttry {\n \t\tconst response = await axios.put(`http://localhost:3000/produits/${idMod}`, produitEditedInfo);\n \t\tconsole.log(\"RESPONSE\" + response.data);\n \t\tfetchProducts();\n \t\tsetEditMod(false);\n \t\tsetShowAlert(true);\n \t\tsetTimeout(() => {\n \t\t\tsetShowAlert(false);\n \t\t}, 3000);\n \t} catch (error) {\n \t\tconsole.error('Error editing product:', error);\n \t}\n };\n \tconst handleSearch = (searchText) => {\n \tconst filteredData = response.data.filter((row) =>\n \t\trow.numProduit.includes(searchText) || row.design.includes(searchText) || row.prix.toString().includes(searchText)\n \t);\n \tsetFilteredData(filteredData);\n }\n \tconst handleInputChange = (e) => {\n \tconst value = e.target.value;\n \tsetSearchText(value);\n \thandleSearch(value);\n }\n \treturn (\n \t<>\n \t\t{/*{showAlert && (\n \t\t\t<Alert variant=\"filled\" severity=\"success\">\n \t\t\t\tUne Action à terminé avec succès !\n \t\t\t</Alert>\n \t\t)}\n \t\t<div >\n \t\t\t<h1 style={{ textAlign: 'center' }}>GESTION PRODUITS</h1>\n \t\t\t\t<div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n \t\t\t\t<Button style={{ margin: '15px' }} startIcon={<AddCircleIcon />} size='medium' variant='contained' onClick={() => { setAddMod(true) }}>\n \t\t\t\t\t<strong>Ajouter</strong>\n \t\t\t\t</Button>\n \t\t\t\t<TextField style={{ marginRight: '15px' }}\n \t\t\t\t\tvariant='outlined'\n \t\t\t\t\tsize=\"small\"\n \t\t\t\t\tlabel='Search'\n \t\t\t\t\tInputProps={{\n \t\t\t\t\t\tendAdornment: <SearchIcon fontSize='small' />,\n \t\t\t\t\t}}\n \t\t\t\t\tvalue={searchText}\n \t\t\t\t\tonInput={handleInputChange}\n \t\t\t\t/>\n \t\t\t</div>\n \t\t\t\t<Dialog size=\"sx\" open={addMod} onClose={() => setAddMod(false)}>\n \t\t\t\t\t<DialogContent style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', margin: '10px', justifyContent: 'space-around' }}>\n \t\t\t\t\t<h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Ajouter produit</h4>\n \t\t\t\t\t<TextField style={{ marginBottom: '15px' }} size='small' label=\"NumProd\" type='text' name=\"numProduit\" value={produitInfo.numProduit} onChange={handleChange} />\n \t\t\t\t\t<TextField style={{ marginBottom: '15px' }} size='small' label=\"Design\" type='text' name=\"design\" value={produitInfo.design} onChange={handleChange} />\n \t\t\t\t\t<TextField style={{ marginBottom: '15px' }} size='small' label=\"Prix\" type='text' name=\"prix\" value={produitInfo.prix} onChange={handleChange} />\n \t\t\t\t\t<TextField style={{ marginBottom: '15px' }} size='small' label=\"Quantite\" type='text' name=\"quantite\" value={produitInfo.quantite} onChange={handleChange} />\n \t\t\t\t\t<div>\n \t\t\t\t\t\t<Button style={{ margin: '10px' }} color='success' variant=\"contained\" onClick={insertProducts}>\n \t\t\t\t\t\t\tValider\n \t\t\t\t\t\t</Button>\n \t\t\t\t\t\t<Button style={{ margin: '10px' }} variant=\"outlined\" color=\"error\" onClick={() => setAddMod(false)}>\n \t\t\t\t\t\t\tAnnuler\n \t\t\t\t\t\t</Button>\n \t\t\t\t\t</div>\n \t\t\t\t</DialogContent>\n \t\t\t</Dialog>\n \t\t\t\t<Dialog size=\"md\" open={confirmDel} onClose={() => setConfirmDel(false)}>\n \t\t\t\t<DialogContent style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', margin: '10px', justifyContent: 'space-around' }}>\n \t\t\t\t\t<Typography>\n \t\t\t\t\t\tVoulez-vous vraiment supprimer cette enregistrement ?\n \t\t\t\t\t</Typography>\n \t\t\t\t\t<div>\n \t\t\t\t\t\t<Button style={{ margin: '10px' }} color=\"secondary\" onClick={() => { deleteProducts(idDel); setConfirmDel(false) }}>\n \t\t\t\t\t\t\tOui\n \t\t\t\t\t\t</Button>\n \t\t\t\t\t\t<Button style={{ margin: '10px' }} color=\"error\" variant=\"outlined\" size=\"small\" onClick={() => setConfirmDel(false)}>\n \t\t\t\t\t\t\tNon\n \t\t\t\t\t\t</Button>\n \t\t\t\t\t</div>\n \t\t\t\t</DialogContent>\n \t\t\t</Dialog>\n \t\t\t\t<Dialog size=\"md\" open={editMod} onClose={() => setEditMod(false)}>\n \t\t\t\t\t<DialogContent style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', margin: '10px', justifyContent: 'space-around' }}>\n \t\t\t\t\t<h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Modifier produit</h4>\n \t\t\t\t\t<TextField style={{ marginBottom: '15px' }} size='small' label=\"Nouveau design\" type='text' name='design' value={selectedProduct ? selectedProduct.design : ''} onChange={handleEditChange} />\n \t\t\t\t\t<TextField style={{ marginBottom: '15px' }} size='small' label=\"Nouveau prix\" type='text' name='prix' value={selectedProduct ? selectedProduct.prix : ''} onChange={handleEditChange} />\n \t\t\t\t\t<TextField style={{ marginBottom: '15px' }} size='small' label=\"Nouveau quantite\" type='text' name='quantite' value={selectedProduct ? selectedProduct.quantite : ''} onChange={handleEditChange} />\n \t\t\t\t\t<TextField style={{ marginBottom: '15px' }} size='small' label=\"Inchange numProduit\" type='text' name='numProduit' value={selectedProduct ? selectedProduct.numProduit : ''} onChange={handleEditChange} />\n \t\t\t\t\t<div>\n \t\t\t\t\t\t<Button style={{ margin: '10px' }} color='success' variant=\"contained\" onClick={editProducts}>\n \t\t\t\t\t\t\tValider\n \t\t\t\t\t\t</Button>\n \t\t\t\t\t\t<Button style={{ margin: '10px' }} variant=\"outlined\" color=\"error\" onClick={() => setEditMod(false)}>\n \t\t\t\t\t\t\tAnnuler\n \t\t\t\t\t\t</Button>\n \t\t\t\t\t</div>\n \t\t\t\t</DialogContent>\n \t\t\t</Dialog>\n \t\t</div>\n \t\t\t<div style={{ margin: '50px' }}>\n \t\t\t<TableContainer component={Paper} >\n \t\t\t\t<Table sx={{ minWidth: 700 }} aria-label=\"spanning table\">\n \t\t\t\t\t<TableHead>\n \t\t\t\t\t\t<TableRow style={{ textAlign: 'center' }}>\n \t\t\t\t\t\t\t<TableCell style={{ fontWeight: 'bold' }}>Numéro produit</TableCell>\n \t\t\t\t\t\t\t<TableCell style={{ fontWeight: 'bold' }}>Designation</TableCell>\n \t\t\t\t\t\t\t<TableCell style={{ fontWeight: 'bold' }}>Prix</TableCell>\n \t\t\t\t\t\t\t<TableCell style={{ fontWeight: 'bold' }}>Quantité</TableCell>\n \t\t\t\t\t\t\t<TableCell style={{ fontWeight: 'bold' }}>Montant</TableCell>\n \t\t\t\t\t\t\t<TableCell style={{ fontWeight: 'bold' }}>Action</TableCell>\n \t\t\t\t\t\t</TableRow>\n \t\t\t\t\t</TableHead>\n \t\t\t\t\t{/*<TableBody>\n \t\t\t\t\t\t{filteredData.map((row, index) => (\n \t\t\t\t\t\t\t<TableRow key={index}>\n \t\t\t\t\t\t\t\t<TableCell>{row.numProduit}</TableCell>\n \t\t\t\t\t\t\t\t<TableCell>{row.design}</TableCell>\n \t\t\t\t\t\t\t\t<TableCell>{(row.prix).toLocaleString('en-US', { minimumFractionDigits: 0 }) + \" Ar\"}</TableCell>\n \t\t\t\t\t\t\t\t<TableCell>{row.quantite}</TableCell>\n \t\t\t\t\t\t\t\t<TableCell>{(row.prix * row.quantite).toLocaleString('en-US', { minimumFractionDigits: 0 }) + \" Ar\"}</TableCell>\n \t\t\t\t\t\t\t\t<TableCell>\n \t\t\t\t\t\t\t\t\t<Button color=\"secondary\" size=\"small\" onClick={() => { setEditMod(true); handleSelectProduct(row) }}>Editer</Button>\n \t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"error\" size=\"small\" onClick={() => { setConfirmDel(true); setIdDel(row.numProduit) }}>Supprimer</Button>\n \t\t\t\t\t\t\t\t</TableCell>\n \t\t\t\t\t\t\t</TableRow>\n \t\t\t\t\t\t))}\n \t\t\t\t\t\t\t<TableRow>\n \t\t\t\t\t\t\t<TableCell rowSpan={5} />\n \t\t\t\t\t\t\t<TableCell colSpan={3} style={{ fontWeight: 'bold' }} align='center'>Prix minimal</TableCell>\n \t\t\t\t\t\t\t<TableCell align=\"left\">\n \t\t\t\t\t\t\t\t{Math.min(...products.map((element) => element.prix)).toLocaleString('en-US', { minimumFractionDigits: 0 }) + \" Ar\"}\n \t\t\t\t\t\t\t</TableCell>\n \t\t\t\t\t\t</TableRow>\n \t\t\t\t\t\t<TableRow>\n \t\t\t\t\t\t\t<TableCell colSpan={3} style={{ fontWeight: 'bold' }} align='center'>Prix maximal</TableCell>\n \t\t\t\t\t\t\t<TableCell align=\"left\">{Math.max(...products.map((element) => element.prix)).toLocaleString('en-US', { minimumFractionDigits: 0 }) + \" Ar\"}</TableCell>\n \t\t\t\t\t\t</TableRow>\n \t\t\t\t\t\t<TableRow>\n \t\t\t\t\t\t\t<TableCell colSpan={3} style={{ fontWeight: 'bold' }} align='center'>Prix Total</TableCell>\n \t\t\t\t\t\t\t<TableCell align=\"left\">\n \t\t\t\t\t\t\t\t{products.reduce((total, element) => total + element.prix * element.quantite, 0).toLocaleString('en-US', { minimumFractionDigits: 0 }) + \" Ar\"}\n \t\t\t\t\t\t\t</TableCell>\n \t\t\t\t\t\t</TableRow>\n \t\t\t\t\t</TableBody>\n \t\t\t\t</Table>\n \t\t\t</TableContainer>\n \t\t</div>\n \t</>\n );\n };\n export default App;*/}\nvar _c, _c2;\n$RefreshReg$(_c, \"%default%$App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useEffect","useState","axios","TextField","Button","Dialog","DialogContent","Typography","SearchIcon","AddCircleIcon","Alert","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","response","jsxDEV","_jsxDEV","_c2","App","_c","children","fileName","_jsxFileName","lineNumber","columnNumber","$RefreshReg$"],"sources":["/home/axm/asa/js/gestionProd/reactphp/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { TextField, Button, Dialog, DialogContent, Typography } from '@mui/material';\nimport SearchIcon from '@mui/icons-material/Search';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport Alert from '@mui/material/Alert';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport { response } from 'express';\n\nexport default App(() => {\n\treturn(\n\t\t<h1>GESTION PRODUITS</h1>\n\t);\n});\n{/*const App = () => {\n\tconst [products, setProducts] = useState([]);\n\tconst [produitInfo, setProduitInfo] = useState({\n\t\tnumProduit: '',\n\t\tdesign: '',\n\t\tprix: '',\n\t\tquantite: ''\n\t})\n\tconst [addMod, setAddMod] = useState(false);\n\tconst [showAlert, setShowAlert] = useState(false);\n\tconst [confirmDel, setConfirmDel] = useState(false);\n\tconst [idDel, setIdDel] = useState('')\n\tconst [editMod, setEditMod] = useState(false);\n\tconst [searchText, setSearchText] = useState('');\n\tconst [idMod, setIdMod] = useState('')\n\tconst [selectedProduct, setSelectedProduct] = useState(null);\n\tconst [filteredData, setFilteredData] = useState('');\n\tconst [produitEditedInfo, setProduitEditedInfo] = useState({\n\t\tnumProduit: '',\n\t\tdesign: '',\n\t\tprix: '',\n\t\tquantite: ''\n\t});\n\n\tconst handleChange = (event) => {\n\t\tconst { name, value } = event.target;\n\t\tsetProduitInfo((prevProducts) => ({\n\t\t\t...prevProducts,\n\t\t\t[name]: value,\n\t\t}));\n\t};\n\n\tconst handleEditChange = (event) => {\n\t\tconst { name, value } = event.target;\n\t\tsetProduitEditedInfo((prevProduct) => ({\n\t\t\t...prevProduct,\n\t\t\t[name]: value,\n\t\t}));\n\t\tconsole.log(produitEditedInfo);\n\t}\n\n\tconst fetchProducts = async () => {\n\t\ttry {\n\t\t\tconst response = await axios.get('http://localhost:3000/produits/');\n\t\t\tsetProducts(response.data);\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching products:', error);\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tfetchProducts();\n\t}, []);\n\n\tconst insertProducts = async () => {\n\t\tconst response = await axios.post(\"http://localhost:3000/produits\", produitInfo);\n\t\tconsole.log(produitInfo);\n\t\tfetchProducts()\n\t\tsetAddMod(false)\n\t\tsetShowAlert(true)\n\t\tsetProduitInfo('')\n\t\tsetTimeout(() => {\n\t\t\tsetShowAlert(false);\n\t\t}, 3000);\n\t}\n\n\tconst deleteProducts = async (numProduit) => {\n\t\tconst response = await axios.delete(`http://localhost:3000/produits/${numProduit}`);\n\t\tfetchProducts()\n\t\tsetShowAlert(true)\n\t\tsetTimeout(() => {\n\t\t\tsetShowAlert(false);\n\t\t}, 3000);\n\t}\n\n\tconst handleSelectProduct = (product) => {\n\t\tsetSelectedProduct(product);\n\t};\n\n\tconst editProducts = async () => {\n\t\ttry {\n\t\t\tconst response = await axios.put(`http://localhost:3000/produits/${idMod}`, produitEditedInfo);\n\t\t\tconsole.log(\"RESPONSE\" + response.data);\n\t\t\tfetchProducts();\n\t\t\tsetEditMod(false);\n\t\t\tsetShowAlert(true);\n\t\t\tsetTimeout(() => {\n\t\t\t\tsetShowAlert(false);\n\t\t\t}, 3000);\n\t\t} catch (error) {\n\t\t\tconsole.error('Error editing product:', error);\n\t\t}\n\t};\n\n\tconst handleSearch = (searchText) => {\n\t\tconst filteredData = response.data.filter((row) =>\n\t\t\trow.numProduit.includes(searchText) || row.design.includes(searchText) || row.prix.toString().includes(searchText)\n\t\t);\n\t\tsetFilteredData(filteredData);\n\t}\n\n\tconst handleInputChange = (e) => {\n\t\tconst value = e.target.value;\n\t\tsetSearchText(value);\n\t\thandleSearch(value);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{/*{showAlert && (\n\t\t\t\t<Alert variant=\"filled\" severity=\"success\">\n\t\t\t\t\tUne Action à terminé avec succès !\n\t\t\t\t</Alert>\n\t\t\t)}\n\t\t\t<div >\n\t\t\t\t<h1 style={{ textAlign: 'center' }}>GESTION PRODUITS</h1>\n\n\t\t\t\t<div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n\t\t\t\t\t<Button style={{ margin: '15px' }} startIcon={<AddCircleIcon />} size='medium' variant='contained' onClick={() => { setAddMod(true) }}>\n\t\t\t\t\t\t<strong>Ajouter</strong>\n\t\t\t\t\t</Button>\n\t\t\t\t\t<TextField style={{ marginRight: '15px' }}\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tlabel='Search'\n\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\tendAdornment: <SearchIcon fontSize='small' />,\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tvalue={searchText}\n\t\t\t\t\t\tonInput={handleInputChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<Dialog size=\"sx\" open={addMod} onClose={() => setAddMod(false)}>\n\n\t\t\t\t\t<DialogContent style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', margin: '10px', justifyContent: 'space-around' }}>\n\t\t\t\t\t\t<h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Ajouter produit</h4>\n\t\t\t\t\t\t<TextField style={{ marginBottom: '15px' }} size='small' label=\"NumProd\" type='text' name=\"numProduit\" value={produitInfo.numProduit} onChange={handleChange} />\n\t\t\t\t\t\t<TextField style={{ marginBottom: '15px' }} size='small' label=\"Design\" type='text' name=\"design\" value={produitInfo.design} onChange={handleChange} />\n\t\t\t\t\t\t<TextField style={{ marginBottom: '15px' }} size='small' label=\"Prix\" type='text' name=\"prix\" value={produitInfo.prix} onChange={handleChange} />\n\t\t\t\t\t\t<TextField style={{ marginBottom: '15px' }} size='small' label=\"Quantite\" type='text' name=\"quantite\" value={produitInfo.quantite} onChange={handleChange} />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button style={{ margin: '10px' }} color='success' variant=\"contained\" onClick={insertProducts}>\n\t\t\t\t\t\t\t\tValider\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button style={{ margin: '10px' }} variant=\"outlined\" color=\"error\" onClick={() => setAddMod(false)}>\n\t\t\t\t\t\t\t\tAnnuler\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</Dialog>\n\n\t\t\t\t<Dialog size=\"md\" open={confirmDel} onClose={() => setConfirmDel(false)}>\n\t\t\t\t\t<DialogContent style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', margin: '10px', justifyContent: 'space-around' }}>\n\t\t\t\t\t\t<Typography>\n\t\t\t\t\t\t\tVoulez-vous vraiment supprimer cette enregistrement ?\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button style={{ margin: '10px' }} color=\"secondary\" onClick={() => { deleteProducts(idDel); setConfirmDel(false) }}>\n\t\t\t\t\t\t\t\tOui\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button style={{ margin: '10px' }} color=\"error\" variant=\"outlined\" size=\"small\" onClick={() => setConfirmDel(false)}>\n\t\t\t\t\t\t\t\tNon\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</Dialog>\n\n\t\t\t\t<Dialog size=\"md\" open={editMod} onClose={() => setEditMod(false)}>\n\n\t\t\t\t\t<DialogContent style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', margin: '10px', justifyContent: 'space-around' }}>\n\t\t\t\t\t\t<h4 style={{ textAlign: 'center', marginBottom: '15px' }}>Modifier produit</h4>\n\t\t\t\t\t\t<TextField style={{ marginBottom: '15px' }} size='small' label=\"Nouveau design\" type='text' name='design' value={selectedProduct ? selectedProduct.design : ''} onChange={handleEditChange} />\n\t\t\t\t\t\t<TextField style={{ marginBottom: '15px' }} size='small' label=\"Nouveau prix\" type='text' name='prix' value={selectedProduct ? selectedProduct.prix : ''} onChange={handleEditChange} />\n\t\t\t\t\t\t<TextField style={{ marginBottom: '15px' }} size='small' label=\"Nouveau quantite\" type='text' name='quantite' value={selectedProduct ? selectedProduct.quantite : ''} onChange={handleEditChange} />\n\t\t\t\t\t\t<TextField style={{ marginBottom: '15px' }} size='small' label=\"Inchange numProduit\" type='text' name='numProduit' value={selectedProduct ? selectedProduct.numProduit : ''} onChange={handleEditChange} />\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<Button style={{ margin: '10px' }} color='success' variant=\"contained\" onClick={editProducts}>\n\t\t\t\t\t\t\t\tValider\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button style={{ margin: '10px' }} variant=\"outlined\" color=\"error\" onClick={() => setEditMod(false)}>\n\t\t\t\t\t\t\t\tAnnuler\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t</Dialog>\n\t\t\t</div>\n\n\t\t\t<div style={{ margin: '50px' }}>\n\t\t\t\t<TableContainer component={Paper} >\n\t\t\t\t\t<Table sx={{ minWidth: 700 }} aria-label=\"spanning table\">\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t<TableCell style={{ fontWeight: 'bold' }}>Numéro produit</TableCell>\n\t\t\t\t\t\t\t\t<TableCell style={{ fontWeight: 'bold' }}>Designation</TableCell>\n\t\t\t\t\t\t\t\t<TableCell style={{ fontWeight: 'bold' }}>Prix</TableCell>\n\t\t\t\t\t\t\t\t<TableCell style={{ fontWeight: 'bold' }}>Quantité</TableCell>\n\t\t\t\t\t\t\t\t<TableCell style={{ fontWeight: 'bold' }}>Montant</TableCell>\n\t\t\t\t\t\t\t\t<TableCell style={{ fontWeight: 'bold' }}>Action</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t{/*<TableBody>\n\t\t\t\t\t\t\t{filteredData.map((row, index) => (\n\t\t\t\t\t\t\t\t<TableRow key={index}>\n\t\t\t\t\t\t\t\t\t<TableCell>{row.numProduit}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{row.design}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{(row.prix).toLocaleString('en-US', { minimumFractionDigits: 0 }) + \" Ar\"}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{row.quantite}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{(row.prix * row.quantite).toLocaleString('en-US', { minimumFractionDigits: 0 }) + \" Ar\"}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>\n\t\t\t\t\t\t\t\t\t\t<Button color=\"secondary\" size=\"small\" onClick={() => { setEditMod(true); handleSelectProduct(row) }}>Editer</Button>\n\t\t\t\t\t\t\t\t\t\t<Button variant=\"outlined\" color=\"error\" size=\"small\" onClick={() => { setConfirmDel(true); setIdDel(row.numProduit) }}>Supprimer</Button>\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell rowSpan={5} />\n\t\t\t\t\t\t\t\t<TableCell colSpan={3} style={{ fontWeight: 'bold' }} align='center'>Prix minimal</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t{Math.min(...products.map((element) => element.prix)).toLocaleString('en-US', { minimumFractionDigits: 0 }) + \" Ar\"}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell colSpan={3} style={{ fontWeight: 'bold' }} align='center'>Prix maximal</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">{Math.max(...products.map((element) => element.prix)).toLocaleString('en-US', { minimumFractionDigits: 0 }) + \" Ar\"}</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell colSpan={3} style={{ fontWeight: 'bold' }} align='center'>Prix Total</TableCell>\n\t\t\t\t\t\t\t\t<TableCell align=\"left\">\n\t\t\t\t\t\t\t\t\t{products.reduce((total, element) => total + element.prix * element.quantite, 0).toLocaleString('en-US', { minimumFractionDigits: 0 }) + \" Ar\"}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</TableContainer>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default App;*/}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,MAAM,EAAEC,MAAM,EAAEC,aAAa,EAAEC,UAAU,QAAQ,eAAe;AACpF,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,QAAQ,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAAC,GAAA,GAAeC,GAAG,CAAAC,EAAA,GAACA,CAAA,KAAM;EACxB,oBACCH,OAAA;IAAAI,QAAA,EAAI;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAE3B,CAAC,CAAC;AACF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBA7NC;AAiPqB,IAAAL,EAAA,EAAAF,GAAA;AAAAQ,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAR,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}